unless ENV['UNICORN_WORKER']
  Signal.trap('URG') do
    # Set future workers to not use coverage
    ENV.delete('COVERAGE')
    ENV['RUBYOPT'] = ENV['RUBYOPT'].gsub(' -r ./test/coverage_helper', '')
  end
end

require_relative '../lib/unicorn-lockdown'

default_middleware false

opts = {
  :app=>"test-app",
  :pledge=>'rpath wpath cpath prot_exec inet unix flock',
  :master_pledge=>'rpath prot_exec cpath wpath inet proc exec flock',
  :master_execpledge=>'stdio rpath prot_exec inet unix cpath wpath unveil flock',
}

opts[:email] = 'root' unless ENV['UNICORN_LOCKDOWN_NO_EMAIL']

if ENV['RACK_ENV'] == 'development'
  opts[:unveil] = {'.'=>'r'}
  opts[:dev_unveil] = {'coverage'=>'rwc', 'test/var'=>'rwc'}
else
  opts[:unveil] = {'coverage'=>'rwc', '.'=>'r', 'test/var'=>'rwc'}
end

Unicorn.lockdown(self, opts)

listen "127.0.0.1:#{ENV['PORT']}"
